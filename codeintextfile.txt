npx create-react-app pokiman
npm i axios

npm start

----------------------
Application to fetch the pokemon character name through api and show it dynamically
using next and previous button
----------------------


App component
--------------------------------------------------------------------
import react,{useSate,useEffect} from "react"
import axios from "axios"
import {PokimanList} from "./PokimanList"
import {Pagination} from "./Pagination"

function App (){

const [pokiman, setPokiman] = useState([])
const [currentPageUrl, setCurrentPageUrl] = useState(Url)
const [nextPageUrl, setNextPageUrl] = useState()
const [prevPageUrl, setPrevPageUrl] = useState()
const [loading, setLoading] = useState(true)


useEffect(()=>{
	
	setLoading(ture)
	let cancel
	axios.get(currentPageUrl,{
	cancelToken : new axios.CancelToken(c => cancel =c)
				}).then(res => (
	setLoading(false)
	setNextPageUrl(res.data.next)
	setPrevPageUrl(res.data.previous)
	setPokiman(res.data.results.map(p=> p.name))).catch(err=>err)

   return() => {
		cancel()
		}

},[currentPageUrl])


if (loading) return "Loading..."


function gotoNextPage(){
setCurrentPageUrl(nextPageUrl)
}

function gotoPrevPage(){
setCurrentPageUrl(prevPageUrl)
}


return(
	<>
<PokimanList pokiman={pokiman} />
<Pagination gotoNextPage={nextPageUrl ? gotoNextPage : null} gotoPrevPage={prevPageUrl ? gotoPrevPage : null}/>
	</>
)
}

export default App
----------------------------------------------------------------------
PokimanList Component
----------------------------------------------------------------------
import react from "react"


export function PokimanList({pokiman}){

return(
<>
	{ pokiman.map(p=> 
		<div key={p}> {p} </div> }
</>
)
}


----------------------------------------------------------------------
Pagination Component
----------------------------------------------------------------------
import react from "react"

export function Pagination({gotoNextPage, gotoPrevPage}){

return(
	<>

{gotoPrevPage && <button onClick={gotoPrevPage}> Previous </button>}
{gotoNextPage && <button onClick={gotoNextPage}> Next </button>}
	
	</>
)
}


